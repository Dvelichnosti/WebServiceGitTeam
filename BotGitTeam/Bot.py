import logging
import telegram
import asyncio
from telegram import Message, Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
) #–∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

import logging
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = "7682952936:AAGjkGlBk45iskGZouGk_ofW53e4DNrRsO0"  # –¢–ì ID –±–æ—Ç–∞
ADMIN_ID = 5642938812  # –¢–ì ID –∞–¥–º–∏–Ω–∞

messages_queue = {}
user_email_requests = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [KeyboardButton("‚ùóÔ∏è–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"),
         KeyboardButton("üí¨–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π"),
         KeyboardButton("üîë–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å")]
    ]
    
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", reply_markup=reply_markup)

async def show_questions(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [KeyboardButton("üõ°FAQ"), KeyboardButton("üõ°–ê–≤—Ç–æ—Ä—ã")],
        [KeyboardButton("üîô–ù–∞–∑–∞–¥")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    await context.bot.send_message(chat_id=update.message.from_user.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    if user_id != ADMIN_ID:
        if update.message.text == "‚ùóÔ∏è–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
            await show_questions(update, context)
        elif update.message.text == "üí¨–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π":
            await context.bot.send_message(chat_id=user_id, text="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —á–µ—Ä–µ–∑ –±–æ—Ç–∞\n‚ùóÔ∏è—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–ø–∏—à–µ—Ç —Ç—É–¥–∞\n–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô–ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞:", reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô–ù–∞–∑–∞–¥")]], resize_keyboard=True, one_time_keyboard=True))
        elif update.message.text == "üîë–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å":
            user_email_requests[user_id] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—á—Ç—ã
            await context.bot.send_message(chat_id=user_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É:")
        elif update.message.text in user_email_requests and user_email_requests[user_id]:
            email = update.message.text
            await context.bot.send_message(chat_id=ADMIN_ID, text=f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –æ—Ç @{update.message.from_user.username}. –ü–æ—á—Ç–∞: {email}")
            await context.bot.send_message(chat_id=user_id, text="–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            del user_email_requests[user_id]  # –£–¥–∞–ª—è–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        elif update.message.text == "üõ°FAQ":
            await context.bot.send_message(chat_id=user_id, text="1.–ù–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫–∞—è-–ª–∏–±–æ –≤–∫–ª–∞–¥–∫–∞ —Å–∞–π—Ç–∞?\n‚úÖ–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É 'üí¨–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π' –∏ –æ–ø–∏—Å–∞—Ç—å –≤—Å—é –ø—Ä–æ–±–ª–µ–º—É,\n2.–ö–∞–∫ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—èn‚úÖ–í—Å–µ –ø—Ä–æ—Å—Ç–æ. –ó–∞—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç, –Ω–∞–∂–∏–º–∞–µ—Ç–µ –∫–Ω–æ–ø–∫—É '—Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—è' –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç–µ –¥–∞–Ω–Ω—ã–µüòä\n–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ãn–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–æ —Ç—É—Ç –∏—Ö –Ω–µ—Ç, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É 'üí¨–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π'\n\n–ù–∞–∂–º–∏—Ç–µ 'üîô–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è.", reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô–ù–∞–∑–∞–¥")]], resize_keyboard=True, one_time_keyboard=True))
        elif update.message.text == "üõ°–ê–≤—Ç–æ—Ä—ã":            await context.bot.send_message(chat_id=user_id, text="–ê–≤—Ç–æ—Ä—ã:\n–ò–≤–∞–Ω - Python - –ß–∞—Ç-–ë–æ—Ç developer\n–Ø–∫–æ–≤ - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –°–∞–π—Ç–∞ ‚Ññ1\n–î–º–∏—Ç—Ä–∏–π - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –°–∞–π—Ç–∞ ‚Ññ2\n–ê–Ω–¥—Ä–µ–π - –î–∏–∑–∞–π–Ω–µ—Ä –°–∞–π—Ç–∞\n\n–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô–ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: .", reply_markup=ReplyKeyboardMarkup([[KeyboardButton("üîô–ù–∞–∑–∞–¥")]], resize_keyboard=True, one_time_keyboard=True))
        elif update.message.text == "üîô–ù–∞–∑–∞–¥":
            await start(update, context) 
        else:
            await context.bot.send_message(chat_id=user_id, text="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            messages_queue[user_id] = update.message.text
            await context.bot.send_message(chat_id=ADMIN_ID, text=f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{update.message.from_user.username}: {update.message.text}")
    else:
        await handle_admin_reply(update.message)

async def handle_admin_reply(message: Message) -> None:
    if message.reply_to_message and message.reply_to_message.from_user.id in messages_queue:
        user_id = message.reply_to_message.from_user.id
        await message.bot.send_message(chat_id=user_id, text=f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {message.text}")
        del messages_queue[user_id]

def main() -> None:
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    application.run_polling()

if __name__ == "__main__":
    main()

async def send_test_message():
       bot = telegram.Bot(token=TOKEN)
       try:
           await bot.send_message(chat_id=ADMIN_ID, text="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
           print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.")
       except telegram.error.BadRequest as e:
           print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
       asyncio.run(send_test_message())
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
       user_id = update.message.from_user.id
       if user_id != ADMIN_ID:
           messages_queue[user_id] = update.message.text
           try:
               await context.bot.send_message(chat_id=ADMIN_ID, text=f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{update.message.from_user.username}: {update.message.text}")
               await update.message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
           except telegram.error.BadRequest as e:
               logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
       else:
           await handle_admin_reply(update.message)
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    admin_id = 5642938812
    try:
        await context.bot.send_message(chat_id=admin_id, text="–°–æ–æ–±—â–µ–Ω–∏–µ!")
    except telegram.error.BadRequest as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        
if __name__ == "__main__":
       asyncio.run(send_test_message())
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
       user_id = update.message.from_user.id
       if user_id == ADMIN_ID:
           messages_queue[user_id] = update.message.text
           try:
               await context.bot.send_message(chat_id=ADMIN_ID, text=f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{update.message.from_user.username}: {update.message.text}")
               await update.message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
           except telegram.error.BadRequest as e:
               logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
       else:
           await handle_admin_reply(update.message)



   
